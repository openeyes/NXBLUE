// ** Copyright (C) 2020, OpenEyes Foundation. This file is part of OpenEyes.
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.

@use "openeyes/mix" as *;
@use "openeyes/var" as *;

// OE JS incorrectly implemented using position:absolute and is overriding the CSS fixed
// therefore it unfortunately requires a "patient-activity" position: relative wrapper
// 'patient-active' makes no sense and 'js-rel-pos' would be better but supporting current DOM

.patient-activity, .js-rel-pos {
	position: relative;
}

// OE Autocomplete popup
//  a simple version of jQuery UI Autocomplete
// <ul>
.oe-autocomplete {
	// positioned by JS next to input
	position:fixed;
	top:0;
	left:0;
	z-index:$oe-z-popup;

	display:block;
	padding:5px;
	border:1px solid var(--txt-highlight);
	background: var(--bg-max);

	// OE JS is using this approach:
	&.hidden {
		display: none;
	}

	max-width:350px; // restrict long stuff.
	max-height: 300px; // needs restricting and scrolling if too many results
	overflow-y: auto;

	@include boxshadow();
	
	li {
		display: block;
		@include font-size(12);
		font-weight: (--font-medium);
		padding:5px 2px;
		cursor: pointer;
		border-bottom:1px dotted var(--gui-line);
		
		&:last-child {
			border-bottom: none;
		}
		
		// match an <a> behaviour
		&:hover, 
		&:focus {
			color:var(--txt-highlight);
		}
		
		// search string match (if used)
		// wraps the part of the text that matches the search text
		.autocomplete-match {
			font-weight:var(--font-bold);
			font-style: italic;
		}
		
		// originally used <a> in the autocomplete
		// but the <a> is optional (and semantically incorrect)
		// the behaviour should all be on the <li> element
		a {
			display:block;
			// used in ED2.5 for searching Doodles
			&.add-ed-doodle {
				padding:2px 2px;
				@include flex(center, space-between);
			}
		}
	}
}
