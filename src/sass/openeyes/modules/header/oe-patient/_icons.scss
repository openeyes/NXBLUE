// ** Copyright (C) 2020, OpenEyes Foundation. This file is part of OpenEyes.
// ** OpenEyes is free software; and is distributed, WITHOUT ANY WARRANTY under the terms of AGPL 3.0 licence.

@use "openeyes/mix" as *;

.oe-patient {
	// icons buttons for patient
	:is(
	.patient-quicklook,
	.patient-demographics, 
	.patient-management,
	.patient-local-edit,
	.patient-extra,
	.patient-oescape ){
		cursor:pointer;
		@include flex( center, center);
		position: relative;

		// svg icon btn
		.icon {
			display:block;
			fill: var(--txt-base);
			opacity: 0.8;
			width:16px;
			height:16px;

			// delegate Events to parent wrapper
			pointer-events: none;
		}	
		
		// js controlled interaction...
		// the basic behaviour is "open" & "locked"
		// this is equivalent to touch, this is enhanced
		// to allow "hover" behaviour on desktop which is
		// just "open"
		&.open {
			background: var(--btn-blue-hint);
			.icon {
				fill: #fff;
			}

			&.locked::after {
				content: "";
				z-index: 1;
				position: absolute;
				bottom: 0;
				left: 0;
				right: 0;
				height: 2px;
				background: var(--txt-highlight);
			}
		}

	}

	// --- Local Edit and OEscape are basically links (DOM should be prob changed to <a>)

	// Edit Patient when (local)
	// i.e, they are not a PAS integrated patient and have been created within OE
	.patient-local-edit {
		grid-area: 1 / -2;
	}

	// OEscape
	.patient-oescape {
		grid-area: 1 / -3;
	}

	// different behaviour for these icons
	:is(.patient-local-edit, .patient-oescape){
		&:hover {
			.icon {
				fill: var(--txt-highlight);
			}
		}
	}

	// --- Patient data popups

	// info "i"
	.patient-demographics {
		grid-area: 2 / 2;
	}
	
	// little dude
	.patient-management {
		grid-area: 2 / 3;
		.icon {
			width:18px;
			height:18px;
		}
	}

	// eye
	.patient-quicklook {
		grid-area: 2 / 4;
	}
	
	// extra is generic but so far only used for trials
	.patient-extra {
		grid-area: 2 / 5;
	}
}

